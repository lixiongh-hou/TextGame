// Generated by Dagger (https://dagger.dev).
package com.sq.common_module.common.base;

import com.sq.common_module.common.utils.http.SyncAdInfoUtils;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashAdShowUtil_MembersInjector implements MembersInjector<SplashAdShowUtil> {
  private final Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider;

  public SplashAdShowUtil_MembersInjector(Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider) {
    this.syncAdInfoUtilsProvider = syncAdInfoUtilsProvider;
  }

  public static MembersInjector<SplashAdShowUtil> create(
      Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider) {
    return new SplashAdShowUtil_MembersInjector(syncAdInfoUtilsProvider);
  }

  @Override
  public void injectMembers(SplashAdShowUtil instance) {
    injectSyncAdInfoUtils(instance, syncAdInfoUtilsProvider.get());
  }

  @InjectedFieldSignature("com.sq.common_module.common.base.SplashAdShowUtil.syncAdInfoUtils")
  public static void injectSyncAdInfoUtils(SplashAdShowUtil instance,
      SyncAdInfoUtils syncAdInfoUtils) {
    instance.syncAdInfoUtils = syncAdInfoUtils;
  }
}
