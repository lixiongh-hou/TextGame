// Generated by Dagger (https://dagger.dev).
package com.sq.common_module.common.utils.http;

import com.sq.common_module.common.repository.CommonRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SyncAdInfoUtils_Factory implements Factory<SyncAdInfoUtils> {
  private final Provider<CommonRepository> commonRepositoryProvider;

  public SyncAdInfoUtils_Factory(Provider<CommonRepository> commonRepositoryProvider) {
    this.commonRepositoryProvider = commonRepositoryProvider;
  }

  @Override
  public SyncAdInfoUtils get() {
    return newInstance(commonRepositoryProvider.get());
  }

  public static SyncAdInfoUtils_Factory create(
      Provider<CommonRepository> commonRepositoryProvider) {
    return new SyncAdInfoUtils_Factory(commonRepositoryProvider);
  }

  public static SyncAdInfoUtils newInstance(CommonRepository commonRepository) {
    return new SyncAdInfoUtils(commonRepository);
  }
}
