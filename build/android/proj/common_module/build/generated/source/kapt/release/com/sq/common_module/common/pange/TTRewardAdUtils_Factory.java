// Generated by Dagger (https://dagger.dev).
package com.sq.common_module.common.pange;

import com.sq.common_module.common.repository.CommonRepository;
import com.sq.common_module.common.utils.http.SyncAdInfoUtils;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TTRewardAdUtils_Factory implements Factory<TTRewardAdUtils> {
  private final Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider;

  private final Provider<CommonRepository> repositoryProvider;

  public TTRewardAdUtils_Factory(Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider,
      Provider<CommonRepository> repositoryProvider) {
    this.syncAdInfoUtilsProvider = syncAdInfoUtilsProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public TTRewardAdUtils get() {
    return newInstance(syncAdInfoUtilsProvider.get(), repositoryProvider.get());
  }

  public static TTRewardAdUtils_Factory create(Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider,
      Provider<CommonRepository> repositoryProvider) {
    return new TTRewardAdUtils_Factory(syncAdInfoUtilsProvider, repositoryProvider);
  }

  public static TTRewardAdUtils newInstance(SyncAdInfoUtils syncAdInfoUtils,
      CommonRepository repository) {
    return new TTRewardAdUtils(syncAdInfoUtils, repository);
  }
}
