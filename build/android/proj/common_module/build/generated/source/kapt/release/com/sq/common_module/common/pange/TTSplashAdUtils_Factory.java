// Generated by Dagger (https://dagger.dev).
package com.sq.common_module.common.pange;

import com.sq.common_module.common.utils.http.SyncAdInfoUtils;
import com.sq.common_module.common.utils.kt.TrackEventUtils;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TTSplashAdUtils_Factory implements Factory<TTSplashAdUtils> {
  private final Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider;

  private final Provider<TrackEventUtils> trackEventUtilsProvider;

  public TTSplashAdUtils_Factory(Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider,
      Provider<TrackEventUtils> trackEventUtilsProvider) {
    this.syncAdInfoUtilsProvider = syncAdInfoUtilsProvider;
    this.trackEventUtilsProvider = trackEventUtilsProvider;
  }

  @Override
  public TTSplashAdUtils get() {
    TTSplashAdUtils instance = newInstance(syncAdInfoUtilsProvider.get());
    TTSplashAdUtils_MembersInjector.injectTrackEventUtils(instance, trackEventUtilsProvider.get());
    return instance;
  }

  public static TTSplashAdUtils_Factory create(Provider<SyncAdInfoUtils> syncAdInfoUtilsProvider,
      Provider<TrackEventUtils> trackEventUtilsProvider) {
    return new TTSplashAdUtils_Factory(syncAdInfoUtilsProvider, trackEventUtilsProvider);
  }

  public static TTSplashAdUtils newInstance(SyncAdInfoUtils syncAdInfoUtils) {
    return new TTSplashAdUtils(syncAdInfoUtils);
  }
}
