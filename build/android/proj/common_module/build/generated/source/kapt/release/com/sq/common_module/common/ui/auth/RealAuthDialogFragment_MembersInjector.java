// Generated by Dagger (https://dagger.dev).
package com.sq.common_module.common.ui.auth;

import com.sq.common_module.common.repository.CommonRepository;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RealAuthDialogFragment_MembersInjector implements MembersInjector<RealAuthDialogFragment> {
  private final Provider<CommonRepository> repositoryProvider;

  public RealAuthDialogFragment_MembersInjector(Provider<CommonRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  public static MembersInjector<RealAuthDialogFragment> create(
      Provider<CommonRepository> repositoryProvider) {
    return new RealAuthDialogFragment_MembersInjector(repositoryProvider);
  }

  @Override
  public void injectMembers(RealAuthDialogFragment instance) {
    injectRepository(instance, repositoryProvider.get());
  }

  @InjectedFieldSignature("com.sq.common_module.common.ui.auth.RealAuthDialogFragment.repository")
  public static void injectRepository(RealAuthDialogFragment instance,
      CommonRepository repository) {
    instance.repository = repository;
  }
}
