// Generated by Dagger (https://dagger.dev).
package com.sq.common_module.common.utils.kt;

import com.sq.common_module.common.repository.CommonRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TrackEventUtils_Factory implements Factory<TrackEventUtils> {
  private final Provider<CommonRepository> repositoryProvider;

  public TrackEventUtils_Factory(Provider<CommonRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public TrackEventUtils get() {
    return newInstance(repositoryProvider.get());
  }

  public static TrackEventUtils_Factory create(Provider<CommonRepository> repositoryProvider) {
    return new TrackEventUtils_Factory(repositoryProvider);
  }

  public static TrackEventUtils newInstance(CommonRepository repository) {
    return new TrackEventUtils(repository);
  }
}
